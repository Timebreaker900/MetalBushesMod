buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'maven-publish'

version = "${mod_version}"
group = 'com.dave.metalbushesmod' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'metalbushesmod'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings channel: 'snapshot', version: '20201028-1.16.3'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                metalbushesmod {
                    //source sourceSets.main
                    source sourceSets.main.resources { srcDir 'src/generated/resources' }
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                metalbushesmod {
                    source sourceSets.main.resources { srcDir 'src/generated/resources' }
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'metalbushesmod', '--all', '--output', file('src/generated/resources/')

            mods {
                metalbushesmod {
                    source sourceSets.main.resources { srcDir 'src/generated/resources' }
                }
            }
        }
    }
}
repositories {
    maven { url 'https://modmaven.dev/' }
    maven { url "https://www.cursemaven.com" }
    maven {
        name = "storagedrawers"
        url = "https://dl.bintray.com/jaquadro/dev/"
    }
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.16.5-36.1.0'

    //JEI
    compileOnly "mezz.jei:jei-${mc_version}:${jei_version}:api"
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    //TOP
    //compileOnly "mcjty.theoneprobe:TheOneProbe-${mc_release}:${mc_release}-${mcjty_version}:api"
    //runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-${mc_release}:${mc_release}-${mcjty_version}")

    //MEKANISM
    //compileOnly "mekanism:Mekanism:${mekanism_version}:api"
    //runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")// core

    //Immersive Engineering
    //compileOnly "blusunrize.immersiveengineering:ImmersiveEngineering:${immersiveengineering_version}:api"
    //runtimeOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${immersiveengineering_version}")

    //Create
    compile fg.deobf("curse.maven:create-328085:3278516")

    //StorageDrawers
    //compileOnly "com.jaquadro.minecraft.storagedrawers:StorageDrawers:${storagedrawers}:api"
    //runtimeOnly "com.jaquadro.minecraft.storagedrawers:StorageDrawers:${storagedrawers}"

    //Biomes O Plenty
    compile fg.deobf("curse.maven:biomes-o-plenty-220318:3360574");
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "metalbushesmod",
            "Specification-Vendor": "metalbushesmod",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"metalbushesmod",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}